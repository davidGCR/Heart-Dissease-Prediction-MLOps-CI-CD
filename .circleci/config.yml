version: '2.1'
orbs:
  node: circleci/node@5.1.0

defaults: &defaults
  docker:
    - image: cimg/python:3.11.1
  working_directory: ~/project

prepare_venv: &prepare_venv
  run:
    name: Create venv
    command: |
      python -m venv venv
      source venv/bin/activate
      pip install --upgrade pip

prepare_tox: &prepare_tox
  run:
    name: Install tox
    command: |
      pip install --user tox

# fetch_data: &fetch_data
#   run:
#     name: Set script permissions and fetch data
#     command: |
#       source venv/bin/activate
#       chmod +x ./scripts/fetch_kaggle_dataset.sh
#       ./scripts/fetch_kaggle_dataset.sh

jobs:
  test_app:
    <<: *defaults
    working_directory: ~/project/david/api
    steps:
      - checkout:
          path: ~/project
      - *prepare_tox
      - run:
          name: Runnning app tests
          command: |
            tox

  test_and_upload_model:
    <<: *defaults
    working_directory: ~/project/david/model-package
    steps:
      - checkout:
          path: ~/project
      - *prepare_tox
      # - run:
      #     name: Fetch the data
      #     command: |
      #       tox -e fetch_data
      - run:
          name: Test the model
          command: |
            tox
      - run:
          name: Publish model
          command: |
            chmod +x ./publish_model.sh
            tox -e publish_model

  train_and_upload_model:
    <<: *defaults
    steps:
      - checkout
      - *prepare_venv
      - run: 
          name: Install requirements
          command: |
            . venv/bin/activate
            pip install -r packages/regression_model/requirements.txt
      # - *fetch_data
      - run: 
          name: Train model
          command: |
            . venv/bin/activate
            PYTHONPATH=./packages/classifier_model python3 packages/classifier_model/classifier_model/train_pipeline.py
      - run: 
          name: Publish model
          command: |
            . venv/bin/activate
            chmod +x ./scripts/publish_model.sh
            ./scripts/publish_model.sh ./packages/classifier_model/

  publish_docker_image_to_aws:
    <<: *defaults
    working_directory: ~/project/david/api
    steps:
      - checkout
      - *prepare_venv
      - setup_remote_docker
      - run:
          name: Publishing docker image to aws ECR
          command: |
            . venv/bin/activate
            pip install awscli
            pwd
            ls .
            chmod +x ./david/build_docker_image_aws.sh
            ./david/build_docker_image_aws.sh
            aws ecs update-service --cluster heart-dissease-app-ecs-cluster --service service3 --task-definition  task2 --force-new-deployment
  
  get_api_url:
    <<: *defaults
    working_directory: ~/project/david/api
    steps:
      - checkout
      - *prepare_venv
      - run:
          name: Getting API url
          command: |
            . venv/bin/activate
            pip install awscli
            chmod +x ./david/get-public-api.sh
            ./david/get-public-api.sh heart-dissease-app-ecs-cluster

tags_only: &tags_only
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /^.*/

workflows:
  version: 2
  deploy_pipeline:
    jobs:
      - test_app
      - test_and_upload_model:
          <<: *tags_only
      - publish_docker_image_to_aws:
          filters:
            branches:
              only:
                - main
      - get_api_url:
          requires:
            - publish_docker_image_to_aws
          filters:
            branches:
              only:
                - main